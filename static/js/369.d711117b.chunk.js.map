{"version":3,"file":"static/js/369.d711117b.chunk.js","mappings":"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","sources":["components/Contact/Contact.styled.js","components/utilits/RandomColor.js","components/Contact/Contact.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { getRandomHexColor } from '../utilits/RandomColor';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  gap: ${p => p.theme.spacing(6)};\n  align-items: center;\n  width: 100%;\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(5)};\n  margin-bottom: ${p => p.theme.spacing(3)};\n  border-radius: 5px;\n  border-left: ${p => p.theme.spacing(3)} solid ${() => getRandomHexColor()};\n  box-shadow: 2px -2px 5px 0 rgba(0, 0, 0, 0.1),\n    -2px -2px 5px 0 rgba(0, 0, 0, 0.1), 2px 2px 5px 0 rgba(0, 0, 0, 0.1),\n    -2px 2px 5px 0 rgba(0, 0, 0, 0.1);\n  font-size: 20px;\n  letter-spacing: 2px;\n  transition: 0.3s all linear;\n\n  &:hover {\n    border-left: 10px solid transparent;\n    cursor: pointer;\n  }\n`;\n\nexport const User = styled.span`\n  font-size: 16px;\n`;\n\nexport const DeleteContact = styled.button`\n  display: inline-block;\n  text-decoration: none;\n  outline: none;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  cursor: pointer;\n\n  & :hover,\n  & :focus {\n    box-shadow: 0 1px 2px 0 rgb(26 115 232 / 45%),\n      0 1px 3px 1px rgb(26 115 232 / 30%);\n  }\n  > svg {\n    color: ${p => p.theme.colors.grey};\n  }\n\n  &:hover > svg,\n  &:focus > svg {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","export function getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215)\n    .toString(16)\n    .padStart(6, 0)}`;\n}\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { ContactItem, User, DeleteContact } from './Contact.styled';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ContactItem>\n      <User>\n        {name}: {number}\n      </User>\n      <DeleteContact type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        <MdDeleteForever size={'24px'} />\n      </DeleteContact>\n    </ContactItem>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 50%;\n`;\n","import { useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <List>\n      {visibleContacts.map(user => (\n        <Contact\n          key={user.id}\n          id={user.id}\n          name={user.name}\n          number={user.number}\n        />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\nimport { CiUser, CiPhone } from 'react-icons/ci';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(5)};\n  max-width: 50%;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  position: absolute;\n  top: 30%;\n  left: 0;\n  color: ${p => p.theme.colors.error};\n  font-size: 14px;\n  display: block;\n\n  @media only screen and (min-width: 768px) {\n    top: 25%;\n    left: 0;\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  position: relative;\n  font-size: 16px;\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(1)}\n    ${p => p.theme.spacing(2)} ${p => p.theme.spacing(7)};\n  border: 2px solid ${p => p.theme.colors.accent};\n  outline: none;\n  border-radius: ${p => p.theme.spacing(2)};\n  transition: background-color 0.2s;\n\n  &:focus,\n  :hover {\n    background-color: ${p => p.theme.colors.bgInput};\n  }\n`;\n\nexport const AddContactButton = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: 150px;\n  height: 40px;\n  border-radius: ${p => p.theme.spacing(5)};\n  font-family: inherit;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  border-color: ${p => p.theme.colors.accent};\n  background: transparent;\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\n  transition: 0.3s;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    background-color: ${p => p.theme.colors.accent};\n    box-shadow: 0 15px 20px rgba(0, 128, 128, 0.4);\n    color: white;\n    transform: translateY(-7px);\n  }\n`;\n\nexport const UserIcon = styled(CiUser)`\n  position: absolute;\n  top: 28px;\n  left: 5px;\n  font-size: 20px;\n  color: ${p => p.theme.colors.grey};\n  z-index: 100;\n\n  @media only screen and (min-width: 768px) {\n    top: 10px;\n    left: 50px;\n  }\n`;\n\nexport const UserPhone = styled(CiPhone)`\n  position: absolute;\n  top: 103px;\n  left: 5px;\n  font-size: 20px;\n  color: ${p => p.theme.colors.grey};\n  z-index: 100;\n\n  @media only screen and (min-width: 768px) {\n    top: 68px;\n    left: 65px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  Error,\n  StyledInput,\n  AddContactButton,\n  UserIcon,\n  UserPhone,\n} from './ContactForm.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactShema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .min(2, 'Too Short!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('This is a required field'),\n  number: Yup.string()\n    .trim()\n    .matches(\n      /^\\+?\\d{1,4}?[ .\\-s]?(\\(\\d{1,3}?\\))?([ .\\-s]?\\d{1,4}){1,4}$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('This is a required field')\n    .min(9, 'Please enter at least 9 characters'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handleSubmit = (values, actions) => {\n    const nameExists = contacts.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (nameExists) {\n      alert(`${values.name} is already in contacts.`);\n    } else {\n      dispatch(addContact(values));\n      actions.resetForm({ name: '', number: '' });\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={(values, actions) => {\n        handleSubmit(values, actions);\n      }}\n      validationSchema={ContactShema}\n    >\n      <StyledForm>\n        <label>\n          Name\n          <UserIcon />\n          <StyledInput name=\"name\" type=\"text\" />\n          <Error name=\"name\" component=\"span\" />\n        </label>\n        <label>\n          Number\n          <StyledInput name=\"number\" type=\"tel\" />\n          <UserPhone />\n          <Error name=\"number\" component=\"span\" />\n        </label>\n        <AddContactButton type=\"submit\">Add contact</AddContactButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3)};\n  width: 50%;\n  margin-bottom: ${p => p.theme.spacing(4)};\n`;\n\nexport const SearchField = styled.input`\n  position: relative;\n  font-size: 16px;\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(1)}\n    ${p => p.theme.spacing(2)} ${p => p.theme.spacing(5)};\n  border: 2px solid ${p => p.theme.colors.accent};\n  outline: none;\n  color: ${p => p.theme.colors.grey};\n  border-radius: ${p => p.theme.spacing(2)};\n  transition: background-color 0.2s;\n\n  + svg {\n    position: absolute;\n    top: 40px;\n    left: 4px;\n    color: ${p => p.theme.colors.grey};\n  }\n\n  &:focus,\n  :hover {\n    background-color: ${p => p.theme.colors.bgInput};\n  }\n\n  &:focus + svg {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FiSearch } from 'react-icons/fi';\nimport { Container, SearchField } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterName = useSelector(selectFilter);\n\n  const handleSearchChange = evt => {\n    dispatch(setFilter(evt.target.value.trim()));\n  };\n\n  return (\n    <Container>\n      <label htmlFor=\"filter-input\">Find contacts by name</label>\n      <SearchField\n        value={filterName}\n        type=\"text\"\n        onChange={handleSearchChange}\n        id=\"filter-input\"\n      ></SearchField>\n      <FiSearch />\n    </Container>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["ContactItem","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","concat","Math","floor","random","toString","padStart","User","_templateObject2","DeleteContact","_templateObject3","colors","grey","accent","Contact","_ref","id","name","number","dispatch","useDispatch","_jsxs","children","_jsx","type","onClick","deleteContact","MdDeleteForever","size","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","selectVisibleContacts","createSelector","contact","toLowerCase","includes","List","ContactList","visibleContacts","useSelector","map","user","StyledForm","Form","Error","ErrorMessage","error","StyledInput","Field","bgInput","AddContactButton","_templateObject4","UserIcon","CiUser","_templateObject5","UserPhone","CiPhone","_templateObject6","ContactShema","Yup","shape","trim","min","matches","required","ContactForm","Formik","initialValues","onSubmit","values","actions","handleSubmit","some","alert","addContact","resetForm","validationSchema","component","Container","SearchField","Filter","filterName","htmlFor","value","onChange","evt","setFilter","target","FiSearch","Contacts","useEffect","fetchContacts","_Fragment","Helmet"],"sourceRoot":""}
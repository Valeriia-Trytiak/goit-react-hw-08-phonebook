{"version":3,"file":"static/js/4.0ea567eb.chunk.js","mappings":"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","sources":["components/CustomModal/CustomModal.styled.js","components/CustomModal/CustomModal.jsx","components/Contact/Contact.styled.js","components/utilits/RandomColor.js","components/Contact/Contact.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\nimport { CiUser, CiPhone } from 'react-icons/ci';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(5)};\n  max-width: 50%;\n  margin-bottom: ${p => p.theme.spacing(5)};\n`;\n\nexport const Error = styled(ErrorMessage)`\n  position: absolute;\n  top: 30%;\n  left: 0;\n  color: ${p => p.theme.colors.error};\n  font-size: 14px;\n  display: block;\n\n  @media only screen and (min-width: 768px) {\n    top: 25%;\n    left: 0;\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  position: relative;\n  font-size: 16px;\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(1)}\n    ${p => p.theme.spacing(2)} ${p => p.theme.spacing(7)};\n  border: 2px solid ${p => p.theme.colors.accent};\n  outline: none;\n  border-radius: ${p => p.theme.spacing(2)};\n  transition: background-color 0.2s;\n  background: transparent;\n\n  &:focus,\n  :hover {\n    background-color: ${p => p.theme.colors.bgInput};\n  }\n`;\n\nexport const UpdateContactButton = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: 150px;\n  height: 40px;\n  border-radius: ${p => p.theme.spacing(5)};\n  font-family: inherit;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  border-color: ${p => p.theme.colors.accent};\n  background: transparent;\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\n  transition: 0.3s;\n  cursor: pointer;\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: white;\n    transform: translate(0, -3px);\n    box-shadow: 0 20px 40px 0 rgba(11, 99, 246, 1);\n    background-image: linear-gradient(\n      to right,\n      #02aab0 0%,\n      #00cdac 51%,\n      #02aab0 100%\n    );\n  }\n`;\n\nexport const UserIcon = styled(CiUser)`\n  position: absolute;\n  top: 28px;\n  left: 5px;\n  font-size: 20px;\n  color: ${p => p.theme.colors.grey};\n  z-index: 100;\n\n  @media only screen and (min-width: 768px) {\n    top: 10px;\n    left: 50px;\n  }\n`;\n\nexport const UserPhone = styled(CiPhone)`\n  position: absolute;\n  top: 103px;\n  left: 5px;\n  font-size: 20px;\n  color: ${p => p.theme.colors.grey};\n  z-index: 100;\n\n  @media only screen and (min-width: 768px) {\n    top: 68px;\n    left: 65px;\n  }\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport Modal from 'react-modal';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/operations';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  Error,\n  StyledInput,\n  UpdateContactButton,\n  UserIcon,\n  UserPhone,\n} from './CustomModal.styled';\n\nconst ContactShema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .min(2, 'Too Short!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('This is a required field'),\n  number: Yup.string()\n    .trim()\n    .matches(\n      /^\\+?\\d{1,4}?[ .\\-s]?(\\(\\d{1,3}?\\))?([ .\\-s]?\\d{1,4}){1,4}$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('This is a required field')\n    .min(9, 'Please enter at least 9 characters'),\n});\n\nexport const CustomModalForm = ({ isOpen, onClose, userId }) => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, actions) => {\n    dispatch(updateContact(userId, values));\n    actions.resetForm({ name: '', number: '' });\n    onClose();\n  };\n\n  return (\n    <Modal isOpen={isOpen} onRequestClose={onClose} contentLabel=\"Modal Form\">\n      <button onClick={onClose}>&times;</button>\n      <h2>Please, enter new contact details:</h2>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        onSubmit={(values, actions) => {\n          handleSubmit(values, actions);\n        }}\n        validationSchema={ContactShema}\n      >\n        <StyledForm>\n          <label>\n            Name\n            <UserIcon />\n            <StyledInput name=\"name\" type=\"text\" />\n            <Error name=\"name\" component=\"span\" />\n          </label>\n          <label>\n            Number\n            <StyledInput name=\"number\" type=\"tel\" />\n            <UserPhone />\n            <Error name=\"number\" component=\"span\" />\n          </label>\n          <UpdateContactButton type=\"submit\">\n            Update contact\n          </UpdateContactButton>\n        </StyledForm>\n      </Formik>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\nimport { getRandomHexColor } from '../utilits/RandomColor';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  gap: ${p => p.theme.spacing(3)};\n  align-items: center;\n  width: 100%;\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(5)};\n  margin-bottom: ${p => p.theme.spacing(3)};\n  border-radius: 5px;\n  border-left: ${p => p.theme.spacing(3)} solid ${() => getRandomHexColor()};\n  box-shadow: 2px -2px 5px 0 rgba(0, 0, 0, 0.1),\n    -2px -2px 5px 0 rgba(0, 0, 0, 0.1), 2px 2px 5px 0 rgba(0, 0, 0, 0.1),\n    -2px 2px 5px 0 rgba(0, 0, 0, 0.1);\n  font-size: 20px;\n  letter-spacing: 2px;\n  transition: 0.3s all linear;\n\n  &:hover {\n    border-left: 10px solid transparent;\n    cursor: pointer;\n  }\n\n  @media (min-width: 768px) {\n    gap: ${p => p.theme.spacing(6)};\n  }\n`;\n\nexport const User = styled.span`\n  font-size: 16px;\n`;\n\nexport const DeleteContact = styled.button`\n  display: inline-block;\n  text-decoration: none;\n  outline: none;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  cursor: pointer;\n\n  & :hover,\n  & :focus {\n    box-shadow: 0 1px 2px 0 rgb(26 115 232 / 45%),\n      0 1px 3px 1px rgb(26 115 232 / 30%);\n  }\n  > svg {\n    color: ${p => p.theme.colors.grey};\n  }\n\n  &:hover > svg,\n  &:focus > svg {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const UpdateContact = styled.button`\n  display: inline-block;\n  text-decoration: none;\n  outline: none;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  cursor: pointer;\n\n  & :hover,\n  & :focus {\n    box-shadow: 0 1px 2px 0 rgb(26 115 232 / 45%),\n      0 1px 3px 1px rgb(26 115 232 / 30%);\n  }\n  > svg {\n    color: ${p => p.theme.colors.grey};\n  }\n\n  &:hover > svg,\n  &:focus > svg {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","export function getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215)\n    .toString(16)\n    .padStart(6, 0)}`;\n}\n","import { useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport { CustomModalForm } from 'components/CustomModal/CustomModal';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { MdDeleteForever, MdDriveFileRenameOutline } from 'react-icons/md';\nimport {\n  ContactItem,\n  User,\n  DeleteContact,\n  UpdateContact,\n} from './Contact.styled';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <ContactItem>\n      <User>\n        {name}: {number}\n      </User>\n      <DeleteContact type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        <MdDeleteForever size={'24px'} />\n      </DeleteContact>\n      <UpdateContact type=\"button\" onClick={openModal}>\n        <MdDriveFileRenameOutline size={'24px'} />\n      </UpdateContact>\n      {isModalOpen && (\n        <CustomModalForm\n          isOpen={isModalOpen}\n          onClose={closeModal}\n          userId={id}\n        />\n      )}\n    </ContactItem>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 70%;\n\n  @media (min-width: 768px) {\n    width: 50%;\n  }\n\n  @media (min-width: 1024px) {\n    width: 40%;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <List>\n      {visibleContacts.map(user => (\n        <Contact\n          key={user.id}\n          id={user.id}\n          name={user.name}\n          number={user.number}\n        />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\nimport { CiUser, CiPhone } from 'react-icons/ci';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(5)};\n  max-width: 50%;\n  margin-bottom: ${p => p.theme.spacing(5)};\n`;\n\nexport const Error = styled(ErrorMessage)`\n  position: absolute;\n  top: 30%;\n  left: 0;\n  color: ${p => p.theme.colors.error};\n  font-size: 14px;\n  display: block;\n\n  @media only screen and (min-width: 768px) {\n    top: 25%;\n    left: 0;\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  position: relative;\n  font-size: 16px;\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(1)}\n    ${p => p.theme.spacing(2)} ${p => p.theme.spacing(7)};\n  border: 2px solid ${p => p.theme.colors.accent};\n  outline: none;\n  border-radius: ${p => p.theme.spacing(2)};\n  transition: background-color 0.2s;\n  background: transparent;\n\n  &:focus,\n  :hover {\n    background-color: ${p => p.theme.colors.bgInput};\n  }\n`;\n\nexport const AddContactButton = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: 150px;\n  height: 40px;\n  border-radius: ${p => p.theme.spacing(5)};\n  font-family: inherit;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  border-color: ${p => p.theme.colors.accent};\n  background: transparent;\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\n  transition: 0.3s;\n  cursor: pointer;\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: white;\n    transform: translate(0, -3px);\n    box-shadow: 0 20px 40px 0 rgba(11, 99, 246, 1);\n    background-image: linear-gradient(\n      to right,\n      #02aab0 0%,\n      #00cdac 51%,\n      #02aab0 100%\n    );\n  }\n`;\n\nexport const UserIcon = styled(CiUser)`\n  position: absolute;\n  top: 28px;\n  left: 5px;\n  font-size: 20px;\n  color: ${p => p.theme.colors.grey};\n  z-index: 100;\n\n  @media only screen and (min-width: 768px) {\n    top: 10px;\n    left: 50px;\n  }\n`;\n\nexport const UserPhone = styled(CiPhone)`\n  position: absolute;\n  top: 103px;\n  left: 5px;\n  font-size: 20px;\n  color: ${p => p.theme.colors.grey};\n  z-index: 100;\n\n  @media only screen and (min-width: 768px) {\n    top: 68px;\n    left: 65px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  Error,\n  StyledInput,\n  AddContactButton,\n  UserIcon,\n  UserPhone,\n} from './ContactForm.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactShema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .min(2, 'Too Short!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('This is a required field'),\n  number: Yup.string()\n    .trim()\n    .matches(\n      /^\\+?\\d{1,4}?[ .\\-s]?(\\(\\d{1,3}?\\))?([ .\\-s]?\\d{1,4}){1,4}$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('This is a required field')\n    .min(9, 'Please enter at least 9 characters'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handleSubmit = (values, actions) => {\n    const nameExists = contacts.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (nameExists) {\n      alert(`${values.name} is already in contacts.`);\n    } else {\n      dispatch(addContact(values));\n      actions.resetForm({ name: '', number: '' });\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={(values, actions) => {\n        handleSubmit(values, actions);\n      }}\n      validationSchema={ContactShema}\n    >\n      <StyledForm>\n        <label>\n          Name\n          <UserIcon />\n          <StyledInput name=\"name\" type=\"text\" />\n          <Error name=\"name\" component=\"span\" />\n        </label>\n        <label>\n          Number\n          <StyledInput name=\"number\" type=\"tel\" />\n          <UserPhone />\n          <Error name=\"number\" component=\"span\" />\n        </label>\n        <AddContactButton type=\"submit\">Add contact</AddContactButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3)};\n  width: 50%;\n  margin-bottom: ${p => p.theme.spacing(4)};\n`;\n\nexport const SearchField = styled.input`\n  position: relative;\n  font-size: 16px;\n  width: 100%;\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(1)}\n    ${p => p.theme.spacing(2)} ${p => p.theme.spacing(5)};\n  border: 2px solid ${p => p.theme.colors.accent};\n  outline: none;\n  color: ${p => p.theme.colors.grey};\n  border-radius: ${p => p.theme.spacing(2)};\n  transition: background-color 0.2s;\n  background: transparent;\n\n  + svg {\n    position: absolute;\n    top: 40px;\n    left: 4px;\n    color: ${p => p.theme.colors.grey};\n\n    @media only screen and (min-width: 320px) and (max-width: 332px) {\n      top: 60px;\n      left: 4px;\n    }\n  }\n\n  &:focus,\n  :hover {\n    background-color: ${p => p.theme.colors.bgInput};\n  }\n\n  &:focus + svg {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  @media (min-width: 768px) {\n    width: 75%;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FiSearch } from 'react-icons/fi';\nimport { Container, SearchField } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterName = useSelector(selectFilter);\n\n  const handleSearchChange = evt => {\n    dispatch(setFilter(evt.target.value.trim()));\n  };\n\n  return (\n    <Container>\n      <label htmlFor=\"filter-input\">Find contacts by name</label>\n      <SearchField\n        value={filterName}\n        type=\"text\"\n        onChange={handleSearchChange}\n        id=\"filter-input\"\n      ></SearchField>\n      <FiSearch />\n    </Container>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n\n      {contacts.length > 0 && (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n      <div>{isLoading && 'Request in progress...'}</div>\n    </div>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","spacing","Error","ErrorMessage","_templateObject2","colors","error","StyledInput","Field","_templateObject3","accent","bgInput","UpdateContactButton","_templateObject4","UserIcon","CiUser","_templateObject5","grey","UserPhone","CiPhone","_templateObject6","ContactShema","Yup","shape","name","trim","min","matches","required","number","CustomModalForm","_ref","isOpen","onClose","userId","dispatch","useDispatch","_jsxs","Modal","onRequestClose","contentLabel","children","_jsx","onClick","Formik","initialValues","onSubmit","values","actions","handleSubmit","updateContact","resetForm","validationSchema","type","component","ContactItem","concat","Math","floor","random","toString","padStart","User","DeleteContact","UpdateContact","Contact","id","isModalOpen","setIsModalOpen","useState","deleteContact","MdDeleteForever","size","openModal","MdDriveFileRenameOutline","closeModal","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","selectVisibleContacts","createSelector","contact","toLowerCase","includes","List","ContactList","visibleContacts","useSelector","map","user","AddContactButton","ContactForm","some","alert","addContact","Container","SearchField","Filter","filterName","htmlFor","value","onChange","evt","setFilter","target","FiSearch","Contacts","useEffect","fetchContacts","Helmet","length","_Fragment"],"sourceRoot":""}
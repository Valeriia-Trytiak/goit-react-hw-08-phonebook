{"version":3,"file":"static/js/728.a40fd876.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  width: 250px;\n  margin: ${p => p.theme.spacing(10)} auto 0;\n  background: ${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.spacing(8)};\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  display: block;\n  width: 100%;\n  padding: 0 ${p => p.theme.spacing(5)};\n  margin-bottom: ${p => p.theme.spacing(2)};\n  line-height: ${p => p.theme.spacing(10)};\n  border-width: 0;\n  border-radius: ${p => p.theme.spacing(5)};\n\n  &:focus,\n  :hover {\n    background-color: ${p => p.theme.colors.bgInput};\n  }\n`;\n\nexport const FormInner = styled.div`\n  padding: ${p => p.theme.spacing(12)};\n`;\n\nexport const ButtonSubmit = styled.button`\n  text-decoration: none;\n  display: block;\n  margin: 0 auto;\n  margin-top: ${p => p.theme.spacing(8)};\n  width: 150px;\n  height: 40px;\n  border-radius: ${p => p.theme.spacing(5)};\n  font-family: inherit;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  border-color: ${p => p.theme.colors.grey};\n  background: transparent;\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\n  transition: 0.3s;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    background-color: ${p => p.theme.colors.grey};\n    box-shadow: 0 15px 20px rgba(0, 128, 128, 0.4);\n    color: white;\n    transform: translateY(-7px);\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.error};\n  font-size: 14px;\n  display: block;\n`;\n\nexport const Circle = styled.div`\n  position: absolute;\n  bottom: 80px;\n  left: -55px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background: ${p => p.theme.colors.accent};\n`;\n\nexport const LeftDecoration = styled.div`\n  content: '';\n  position: absolute;\n  bottom: 60px;\n  left: -30px;\n  width: 50px;\n  height: 20px;\n  background: ${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.spacing(5)};\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    border-radius: ${p => p.theme.spacing(8)};\n    background-image: linear-gradient(\n      0deg,\n      rgb(217, 175, 217) 0%,\n      rgb(151, 217, 225) 150%\n    );\n  }\n\n  &::before {\n    top: -20px;\n  }\n\n  &::after {\n    top: 20px;\n    left: 10px;\n  }\n`;\n\nexport const RightDecoration = styled.div`\n  content: '';\n  position: absolute;\n  top: 60px;\n  right: -30px;\n  width: 50px;\n  height: 20px;\n  background: ${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.spacing(5)};\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    border-radius: ${p => p.theme.spacing(8)};\n  }\n\n  &::before {\n    top: -20px;\n    right: 0;\n    background-color: rgb(190, 231, 236);\n  }\n\n  &::after {\n    top: 20px;\n    right: 10px;\n    background-color: rgb(170, 224, 230);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  FormInner,\n  ButtonSubmit,\n  Error,\n  StyledInput,\n  Circle,\n  LeftDecoration,\n  RightDecoration,\n} from './RegisterForm.styled';\nimport { register } from 'redux/auth/operations';\n\nconst ContactShema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .min(2, 'Too Short!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('This is a required field'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('This is a required field'),\n  password: Yup.string()\n    .matches(\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/,\n      'Please create a stronger password. It must contain one uppercase and one lowercase letter'\n    )\n    .required('This is a required field'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(register(values));\n    actions.resetForm({ name: '', email: '', password: '' });\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      onSubmit={(values, actions) => {\n        handleSubmit(values, actions);\n      }}\n      validationSchema={ContactShema}\n    >\n      <StyledForm>\n        <LeftDecoration></LeftDecoration>\n        <RightDecoration></RightDecoration>\n        <Circle></Circle>\n        <FormInner>\n          <label>\n            Name\n            <StyledInput name=\"name\" type=\"text\" />\n            <Error name=\"name\" component=\"span\" />\n          </label>\n          <label>\n            Email\n            <StyledInput name=\"email\" type=\"email\" />\n            <Error name=\"email\" component=\"span\" />\n          </label>\n          <label>\n            Password\n            <StyledInput name=\"password\" type=\"password\" />\n            <Error name=\"password\" component=\"span\" />\n          </label>\n          <ButtonSubmit type=\"submit\">Log In</ButtonSubmit>\n        </FormInner>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from '../components/RegisterForm/RegisterForm.jsx';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","spacing","colors","accent","StyledInput","Field","_templateObject2","bgInput","FormInner","_templateObject3","ButtonSubmit","_templateObject4","grey","Error","ErrorMessage","_templateObject5","error","Circle","_templateObject6","LeftDecoration","_templateObject7","RightDecoration","_templateObject8","ContactShema","Yup","shape","name","trim","min","matches","required","email","password","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","onSubmit","values","actions","handleSubmit","register","resetForm","validationSchema","children","_jsxs","type","component","Register","Helmet"],"sourceRoot":""}
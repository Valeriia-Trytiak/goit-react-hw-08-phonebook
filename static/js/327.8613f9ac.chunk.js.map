{"version":3,"file":"static/js/327.8613f9ac.chunk.js","mappings":"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","sources":["components/ContainerLoader/ContainerLoader.js","components/CustomModal/CustomModal.styled.js","components/CustomModal/CustomModal.jsx","components/Contact/Contact.styled.js","components/utilits/RandomColor.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerLoader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n`;\n","import styled from 'styled-components';\n// import Modal from 'react-modal';\nimport { Form, ErrorMessage, Field } from 'formik';\nimport { CiUser, CiPhone } from 'react-icons/ci';\n\n// export const ModalStyled = styled(Modal)`\n//   .overlay {\n//     background-color: rgba(0, 0, 0, 0.8);\n//     position: fixed;\n//     top: 0;\n//     left: 0;\n//     width: 100vw;\n//     height: 100vh;\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//   }\n\n//   .content {\n//     top: 50%;\n//     left: 50%;\n//     right: auto;\n//     bottom: auto;\n//     margin-right: -50%;\n//     padding: ${p => p.theme.spacing(5)};\n//     transform: translate(-50%, -50%);\n//     border: 1px solid #ccc;\n//   }\n// `;\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(5)};\n  max-width: 50%;\n  margin-bottom: ${p => p.theme.spacing(5)};\n`;\n\nexport const Error = styled(ErrorMessage)`\n  position: absolute;\n  top: 30%;\n  left: 0;\n  color: ${p => p.theme.colors.error};\n  font-size: 14px;\n  display: block;\n\n  @media only screen and (min-width: 768px) {\n    top: 25%;\n    left: 0;\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  position: relative;\n  font-size: 16px;\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(1)}\n    ${p => p.theme.spacing(2)} ${p => p.theme.spacing(7)};\n  border: 2px solid ${p => p.theme.colors.accent};\n  outline: none;\n  border-radius: ${p => p.theme.spacing(2)};\n  transition: background-color 0.2s;\n  background: transparent;\n\n  &:focus,\n  :hover {\n    background-color: ${p => p.theme.colors.bgInput};\n  }\n`;\n\nexport const UpdateContactButton = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: 150px;\n  height: 40px;\n  border-radius: ${p => p.theme.spacing(5)};\n  font-family: inherit;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  border-color: ${p => p.theme.colors.accent};\n  background: transparent;\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\n  transition: 0.3s;\n  cursor: pointer;\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: white;\n    transform: translate(0, -3px);\n    box-shadow: 0 20px 40px 0 rgba(11, 99, 246, 1);\n    background-image: linear-gradient(\n      to right,\n      #02aab0 0%,\n      #00cdac 51%,\n      #02aab0 100%\n    );\n  }\n`;\n\nexport const UserIcon = styled(CiUser)`\n  position: absolute;\n  top: 28px;\n  left: 5px;\n  font-size: 20px;\n  color: ${p => p.theme.colors.grey};\n  z-index: 100;\n\n  @media only screen and (min-width: 768px) {\n    top: 10px;\n    left: 50px;\n  }\n`;\n\nexport const UserPhone = styled(CiPhone)`\n  position: absolute;\n  top: 103px;\n  left: 5px;\n  font-size: 20px;\n  color: ${p => p.theme.colors.grey};\n  z-index: 100;\n\n  @media only screen and (min-width: 768px) {\n    top: 68px;\n    left: 65px;\n  }\n`;\n\n// export const ModalStyled = styled(Modal)`\n//   .overlay {\n//     background-color: rgba(0, 0, 0, 0.8);\n//     position: fixed;\n//     top: 0;\n//     left: 0;\n//     width: 100vw;\n//     height: 100vh;\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//   }\n\n//   .content {\n//     top: 50%;\n//     left: 50%;\n//     right: auto;\n//     bottom: auto;\n//     margin-right: -50%;\n//     padding: ${p => p.theme.spacing(5)}\n//     transform: translate(-50%, -50%);\n//     border: 1px solid #ccc, */\n\n//   }\n// `;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport Modal from 'react-modal';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/operations';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  Error,\n  StyledInput,\n  UpdateContactButton,\n  UserIcon,\n  UserPhone,\n} from './CustomModal.styled';\n\nconst ContactShema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .min(2, 'Too Short!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('This is a required field'),\n  number: Yup.string()\n    .trim()\n    .matches(\n      /^\\+?\\d{1,4}?[ .\\-s]?(\\(\\d{1,3}?\\))?([ .\\-s]?\\d{1,4}){1,4}$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('This is a required field')\n    .min(9, 'Please enter at least 9 characters'),\n});\n\nModal.setAppElement('#root');\n\nexport const CustomModalForm = ({ isOpen, onClose, userId }) => {\n  const dispatch = useDispatch();\n  const handleSubmit = async (values, actions) => {\n    const newData = {\n      id: userId,\n      data: values,\n    };\n    dispatch(updateContact(newData));\n    actions.resetForm({ name: '', number: '' });\n    onClose();\n  };\n\n  return (\n    <Modal isOpen={isOpen} onRequestClose={onClose} contentLabel=\"Modal Form\">\n      <button onClick={onClose}>&times;</button>\n      <h2>Please, enter new contact details:</h2>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        onSubmit={(values, actions) => {\n          handleSubmit(values, actions);\n        }}\n        validationSchema={ContactShema}\n      >\n        <StyledForm>\n          <label>\n            Name\n            <UserIcon />\n            <StyledInput name=\"name\" type=\"text\" />\n            <Error name=\"name\" component=\"span\" />\n          </label>\n          <label>\n            Number\n            <StyledInput name=\"number\" type=\"tel\" />\n            <UserPhone />\n            <Error name=\"number\" component=\"span\" />\n          </label>\n          <UpdateContactButton type=\"submit\">\n            Update contact\n          </UpdateContactButton>\n        </StyledForm>\n      </Formik>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\nimport { getRandomHexColor } from '../utilits/RandomColor';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  gap: ${p => p.theme.spacing(3)};\n  align-items: center;\n  width: 100%;\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(5)};\n  margin-bottom: ${p => p.theme.spacing(3)};\n  border-radius: 5px;\n  border-left: ${p => p.theme.spacing(3)} solid ${() => getRandomHexColor()};\n  box-shadow: 2px -2px 5px 0 rgba(0, 0, 0, 0.1),\n    -2px -2px 5px 0 rgba(0, 0, 0, 0.1), 2px 2px 5px 0 rgba(0, 0, 0, 0.1),\n    -2px 2px 5px 0 rgba(0, 0, 0, 0.1);\n  font-size: 20px;\n  letter-spacing: 2px;\n  transition: 0.3s all linear;\n\n  &:hover {\n    border-left: 10px solid transparent;\n    cursor: pointer;\n  }\n\n  @media (min-width: 768px) {\n    gap: ${p => p.theme.spacing(6)};\n  }\n`;\n\nexport const User = styled.span`\n  font-size: 16px;\n`;\n\nexport const DeleteContact = styled.button`\n  display: inline-block;\n  text-decoration: none;\n  outline: none;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  cursor: pointer;\n\n  & :hover,\n  & :focus {\n    box-shadow: 0 1px 2px 0 rgb(26 115 232 / 45%),\n      0 1px 3px 1px rgb(26 115 232 / 30%);\n  }\n  > svg {\n    color: ${p => p.theme.colors.grey};\n  }\n\n  &:hover > svg,\n  &:focus > svg {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const UpdateContact = styled.button`\n  display: inline-block;\n  text-decoration: none;\n  outline: none;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  cursor: pointer;\n\n  & :hover,\n  & :focus {\n    box-shadow: 0 1px 2px 0 rgb(26 115 232 / 45%),\n      0 1px 3px 1px rgb(26 115 232 / 30%);\n  }\n  > svg {\n    color: ${p => p.theme.colors.grey};\n  }\n\n  &:hover > svg,\n  &:focus > svg {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","export function getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215)\n    .toString(16)\n    .padStart(6, 0)}`;\n}\n","import { useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport { CustomModalForm } from 'components/CustomModal/CustomModal';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { MdDeleteForever, MdDriveFileRenameOutline } from 'react-icons/md';\nimport {\n  ContactItem,\n  User,\n  DeleteContact,\n  UpdateContact,\n} from './Contact.styled';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    if (!isModalOpen) {\n      setIsModalOpen(true);\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <ContactItem>\n      <User>\n        {name}: {number}\n      </User>\n      <DeleteContact type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        <MdDeleteForever size={'24px'} />\n      </DeleteContact>\n      <UpdateContact type=\"button\" onClick={openModal}>\n        <MdDriveFileRenameOutline size={'24px'} />\n      </UpdateContact>\n      {isModalOpen && (\n        <CustomModalForm\n          isOpen={isModalOpen}\n          onClose={closeModal}\n          userId={id}\n        />\n      )}\n    </ContactItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 70%;\n\n  @media (min-width: 768px) {\n    width: 50%;\n  }\n\n  @media (min-width: 1024px) {\n    width: 40%;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <List>\n      {visibleContacts.map(user => (\n        <Contact\n          key={user.id}\n          id={user.id}\n          name={user.name}\n          number={user.number}\n        />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\nimport { CiUser, CiPhone } from 'react-icons/ci';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(5)};\n  max-width: 50%;\n  margin-bottom: ${p => p.theme.spacing(5)};\n`;\n\nexport const Error = styled(ErrorMessage)`\n  position: absolute;\n  top: 30%;\n  left: 0;\n  color: ${p => p.theme.colors.error};\n  font-size: 14px;\n  display: block;\n\n  @media only screen and (min-width: 768px) {\n    top: 25%;\n    left: 0;\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  position: relative;\n  font-size: 16px;\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(1)}\n    ${p => p.theme.spacing(2)} ${p => p.theme.spacing(7)};\n  border: 2px solid ${p => p.theme.colors.accent};\n  outline: none;\n  border-radius: ${p => p.theme.spacing(2)};\n  transition: background-color 0.2s;\n  background: transparent;\n\n  &:focus,\n  :hover {\n    background-color: ${p => p.theme.colors.bgInput};\n  }\n`;\n\nexport const AddContactButton = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: 150px;\n  height: 40px;\n  border-radius: ${p => p.theme.spacing(5)};\n  font-family: inherit;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  border-color: ${p => p.theme.colors.accent};\n  background: transparent;\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\n  transition: 0.3s;\n  cursor: pointer;\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: ${p => p.theme.colors.white};\n    transform: translate(0, -3px);\n    box-shadow: 0 20px 40px 0 rgba(11, 99, 246, 1);\n    background-image: linear-gradient(\n      to right,\n      #02aab0 0%,\n      #00cdac 51%,\n      #02aab0 100%\n    );\n  }\n`;\n\nexport const UserIcon = styled(CiUser)`\n  position: absolute;\n  top: 28px;\n  left: 5px;\n  font-size: 20px;\n  color: ${p => p.theme.colors.grey};\n  z-index: 100;\n\n  @media (min-width: 532.9px) and (max-width: 767.9px) {\n    top: 10px;\n    left: 50px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    top: 10px;\n    left: 50px;\n  }\n`;\n\nexport const UserPhone = styled(CiPhone)`\n  position: absolute;\n  top: 103px;\n  left: 5px;\n  font-size: 20px;\n  color: ${p => p.theme.colors.grey};\n  z-index: 100;\n\n  @media (min-width: 532.9px) and (max-width: 767.9px) {\n    top: 68px;\n    left: 65px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    top: 68px;\n    left: 65px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  Error,\n  StyledInput,\n  AddContactButton,\n  UserIcon,\n  UserPhone,\n} from './ContactForm.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactShema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .min(2, 'Too Short!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('This is a required field'),\n  number: Yup.string()\n    .trim()\n    .matches(\n      /^\\+?\\d{1,4}?[ .\\-s]?(\\(\\d{1,3}?\\))?([ .\\-s]?\\d{1,4}){1,4}$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('This is a required field')\n    .min(9, 'Please enter at least 9 characters'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handleSubmit = (values, actions) => {\n    const nameExists = contacts.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (nameExists) {\n      alert(`${values.name} is already in contacts.`);\n    } else {\n      dispatch(addContact(values));\n      actions.resetForm({ name: '', number: '' });\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      onSubmit={(values, actions) => {\n        handleSubmit(values, actions);\n      }}\n      validationSchema={ContactShema}\n    >\n      <StyledForm>\n        <label>\n          Name\n          <UserIcon />\n          <StyledInput name=\"name\" type=\"text\" />\n          <Error name=\"name\" component=\"span\" />\n        </label>\n        <label>\n          Number\n          <StyledInput name=\"number\" type=\"tel\" />\n          <UserPhone />\n          <Error name=\"number\" component=\"span\" />\n        </label>\n        <AddContactButton type=\"submit\">Add contact</AddContactButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.spacing(3)};\n  width: 50%;\n  margin-bottom: ${p => p.theme.spacing(4)};\n`;\n\nexport const SearchField = styled.input`\n  position: relative;\n  font-size: 16px;\n  width: 100%;\n  padding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(1)}\n    ${p => p.theme.spacing(2)} ${p => p.theme.spacing(5)};\n  border: 2px solid ${p => p.theme.colors.accent};\n  outline: none;\n  color: ${p => p.theme.colors.grey};\n  border-radius: ${p => p.theme.spacing(2)};\n  transition: background-color 0.2s;\n  background: transparent;\n\n  + svg {\n    position: absolute;\n    top: 40px;\n    left: 4px;\n    color: ${p => p.theme.colors.grey};\n\n    @media only screen and (min-width: 320px) and (max-width: 332px) {\n      top: 60px;\n      left: 4px;\n    }\n  }\n\n  &:focus,\n  :hover {\n    background-color: ${p => p.theme.colors.bgInput};\n  }\n\n  &:focus + svg {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  @media (min-width: 768px) {\n    width: 75%;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { FiSearch } from 'react-icons/fi';\nimport { Container, SearchField } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterName = useSelector(selectFilter);\n\n  const handleSearchChange = evt => {\n    dispatch(setFilter(evt.target.value.trim()));\n  };\n\n  return (\n    <Container>\n      <label htmlFor=\"filter-input\">Find contacts by name</label>\n      <SearchField\n        value={filterName}\n        type=\"text\"\n        onChange={handleSearchChange}\n        id=\"filter-input\"\n      ></SearchField>\n      <FiSearch />\n    </Container>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContainerLoader } from 'components/ContainerLoader/ContainerLoader';\nimport { ColorRing } from 'react-loader-spinner';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      {isLoading && (\n        <ContainerLoader>\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </ContainerLoader>\n      )}\n      {contacts.length > 0 && (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n      {error && <span>Whoops... Error! Please, reload this page!</span>}\n    </div>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n"],"names":["ContainerLoader","styled","_templateObject","_taggedTemplateLiteral","StyledForm","Form","p","theme","spacing","Error","ErrorMessage","_templateObject2","colors","error","StyledInput","Field","_templateObject3","accent","bgInput","UpdateContactButton","_templateObject4","UserIcon","CiUser","_templateObject5","grey","UserPhone","CiPhone","_templateObject6","ContactShema","Yup","shape","name","trim","min","matches","required","number","Modal","CustomModalForm","_ref","isOpen","onClose","userId","dispatch","useDispatch","_jsxs","onRequestClose","contentLabel","children","_jsx","onClick","Formik","initialValues","onSubmit","values","actions","async","newData","id","data","updateContact","resetForm","handleSubmit","validationSchema","type","component","ContactItem","concat","Math","floor","random","toString","padStart","User","DeleteContact","UpdateContact","Contact","isModalOpen","setIsModalOpen","useState","deleteContact","MdDeleteForever","size","openModal","MdDriveFileRenameOutline","closeModal","List","ContactList","visibleContacts","useSelector","selectVisibleContacts","map","user","AddContactButton","white","ContactForm","contacts","selectContacts","some","contact","toLowerCase","alert","addContact","Container","SearchField","Filter","filterName","selectFilter","htmlFor","value","onChange","evt","setFilter","target","FiSearch","Contacts","isLoading","selectIsLoading","selectError","useEffect","fetchContacts","Helmet","ColorRing","visible","height","width","ariaLabel","length","_Fragment","state","items","filter","createSelector","includes"],"sourceRoot":""}